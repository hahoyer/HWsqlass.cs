// Generated by HWClassLibrary.sqlass.T4.Context
// Timestamp: 2011-12-04T18:00:54.2198538+01:00
#region Generated Code

using System;
using System.Collections.Generic;
using System.Linq;
using HWClassLibrary.Debug;
using HWClassLibrary.sqlass;
using HWClassLibrary.sqlass.MetaData;

namespace sqlass.Tables
{
    public partial class Address 
        : ISQLSupportProvider        
        , ISQLKeyProvider<int>    
    { 
        public int Id; 
        public string Text;

        ISQLSupport ISQLSupportProvider.SQLSupport{get{return new SQLSupport.Address(this);}} 
        int ISQLKeyProvider<int>.SQLKey { get { return Id; } }    
    }
}

namespace sqlass.SQLSupport
{
    public partial class Address: ISQLSupport
    {
        readonly Tables.Address _target;
        public Address(Tables.Address target){_target = target;}

        string ISQLSupport.Insert
        {
            get
            {
                var result = "insert into Address values("; 
                result += _target.Id.SQLFormat();
                result += ", "; 
                result += _target.Text.SQLFormat();
                result += ")";   

                return result;
            }
        }

        public static readonly Table MetaDataSupport = new Table
        (
            TableName.Find("", "", "Address"),
            () => new []
            { 

                new Column
                {
                    Name = "Id",
                    Type = typeof(int),
                    IsKey = true,
                    IsNullable = false,
                }, 

                new Column
                {
                    Name = "Text",
                    Type = typeof(string),
                    IsKey = false,
                    IsNullable = false,
                },   
            
            },
            (record, context) => new Tables.Address
            { 
                Id = ((int) record["Id"]), 
                Text = ((string) record["Text"]),   
            }
        );
    }
}

#endregion Generated Code
